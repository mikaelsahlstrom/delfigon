#
# Twonics on Linux
#
# The scenario includes two separated network stacks of NIC driver and HTTP
# server test for an inner and an outer LAN.
#
# The TAP devices driven by the nic_drv hybrid server (tap-inner and tap-outer)
# must be set up by, e.g.,
#
# ! sudo ip tuntap add dev tap-inner mode tap user $USER
# ! sudo ip address add 10.0.11.1/24 dev tap-inner
# ! sudo ip link set dev tap-inner up
# ! sudo ip tuntap add dev tap-outer mode tap user $USER
# ! sudo ip address add 10.0.66.1/24 dev tap-outer
# ! sudo ip link set dev tap-outer up
#
# A running scenario can be tested by your favorite tools, e.g.,
#
# ! ping 10.0.66.15
# ! wget -O /dev/null http://10.0.11.15/
# ! ab -c 2 -n 200 http://10.0.66.15/

assert_spec linux

set build_components {
	core init drivers/timer drivers/nic
	app/nic_diode server/dynamic_rom server/report_rom
}

build $build_components

create_boot_directory

set config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>

	<start name="INNER-NIC">
		<binary name="nic_drv"/>
		<resource name="RAM" quantum="8M"/>
		<provides> <service name="Nic"/> </provides>
		<config>
			<nic mac="52:54:00:12:34:56" tap="tap-inner"/>
		</config>
	</start>

	<start name="OUTER-NIC">
		<binary name="nic_drv"/>
		<resource name="RAM" quantum="8M"/>
		<provides> <service name="Nic"/> </provides>
		<config>
			<nic mac="52:54:00:12:34:57" tap="tap-outer"/>
		</config>
	</start>

	<start name="nic_diode">
		<resource name="RAM" quantum="5M"/>
    <configfile name="nic_diode.config" />
		<route>
			<service name="Nic" label="out"> <child name="OUTER-NIC"/> </service>
			<service name="Nic" label="in"> <child name="INNER-NIC"/> </service>
      <service name="ROM" label="nic_diode.config"> <child name="dynamic_rom"/></service>
      <service name="Report"><child name="report_rom"/></service>

			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

  <start name="dynamic_rom">
    <resource name="RAM" quantum="4M"/>
    <provides><service name="ROM"/></provides>
    <config verbose="yes">
      <rom name="nic_diode.config">
        <inline>
          <config verbose="yes"/>
        </inline>
        <sleep milliseconds="2000" />
        <inline>
          <config verbose="no"/>
        </inline>
        <sleep milliseconds="2000" />
      </rom>
    </config>
  </start>

  <start name="report_rom">
    <resource name="RAM" quantum="2M"/>
    <provides>
      <service name="ROM"/>
      <service name="Report"/>
    </provides>
    <config verbose="yes">
      <rom/>
    </config>
  </start>
</config>
}

install_config $config

set boot_modules {
	core init timer nic_drv nic_diode dynamic_rom report_rom
}

build_boot_image $boot_modules

run_genode_until forever
